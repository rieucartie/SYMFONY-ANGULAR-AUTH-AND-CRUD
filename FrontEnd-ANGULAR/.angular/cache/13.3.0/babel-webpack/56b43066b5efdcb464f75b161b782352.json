{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { ResolveStart, ResolveEnd, NavigationCancel } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let UiService = /*#__PURE__*/(() => {\n  class UiService {\n    constructor(router) {\n      this.router = router;\n      this.loadingState = new Subject();\n      this.initializeRouterEvents();\n    }\n\n    activateLoading() {\n      this.loadingState.next(true);\n    }\n\n    deactivateLoading() {\n      this.loadingState.next(false);\n    }\n\n    initializeRouterEvents() {\n      this.router.events.subscribe(event => {\n        if (event instanceof ResolveStart) {\n          this.loadingState.next(true);\n        } else if (event instanceof ResolveEnd || event instanceof NavigationCancel) {\n          this.loadingState.next(false);\n        }\n      });\n    }\n\n  }\n\n  UiService.ɵfac = function UiService_Factory(t) {\n    return new (t || UiService)(i0.ɵɵinject(i1.Router));\n  };\n\n  UiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UiService,\n    factory: UiService.ɵfac,\n    providedIn: 'root'\n  });\n  return UiService;\n})();","map":null,"metadata":{},"sourceType":"module"}